version: 2.1

commands:
  timeout:
    parameters:
      duration:
        default: '5m'
        type: 'string'
    steps:
      - run:
          name: Cancel job after <<parameters.duration>>
          background: true
          command: |
            sleep <<parameters.duration>>
            echo "Cancelling job as <<parameters.duration>> has elapsed"
            curl --fail -X POST -H "Circle-Token: ${CIRCLE_TOKEN}" "https://circleci.com/api/v1.1/project/github/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/${CIRCLE_BUILD_NUM}/cancel"
  report:
    parameters:
      working_directory:
        type: 'string'
        default: '.'
    steps:
      - run:
          name: Create reports
          command: mvn surefire-report:report-only
          working_directory: <<parameters.working_directory>>
      - store_artifacts:
          path: <<parameters.working_directory>>/target/site
  load_cache:
    steps:
      - run:
          name: Generate Cache Checksum
          command: find . -name 'pom.xml' | sort | xargs cat > /tmp/maven_cache_seed
      - restore_cache:
          key: maven-{{ .Environment.CIRCLE_JOB }}-{{ checksum "/tmp/maven_cache_seed" }}
  store_cache:
    steps:
      - save_cache:
          key: maven-{{ .Environment.CIRCLE_JOB }}-{{ checksum "/tmp/maven_cache_seed" }}
          paths:
            - ~/.m2/repository
  config_gpg:
    steps:
      - run:
          name: Configure GPG
          command: echo $GPG_PRIVATE_KEY | base64 --decode | gpg --batch --no-tty --import --yes
  deploy:
    steps:
      - run:
          name: Deploy to Apache Maven Central
          command: mvn -s .circleci/maven-release-settings.xml -Dmaven.test.skip=true deploy

executors:
  j8:
    docker:
      - image: 'cimg/openjdk:8.0'
  j11:
    docker:
      - image: 'cimg/openjdk:11.0'
  j17:
    docker:
      - image: 'cimg/openjdk:17.0'
  j21:
    docker:
      - image: 'cimg/openjdk:21.0'
  j23:
    docker:
      - image: 'cimg/openjdk:23.0'

jobs:

  test:
    parameters:
      jdk:
        type: 'string'
        default: 'j21'
      args:
        type: 'string'
        default: ''
    executor: <<parameters.jdk>>
    steps:
      - timeout
      - checkout
      - setup_remote_docker
      - load_cache
      - run:
          name: mvn version
          command: mvn --version
      - run:
          name: mvn dependency:tree
          command: mvn dependency:tree <<parameters.args>>
      - run:
          name: Test
          command: mvn test <<parameters.args>>
      - report
      - store_cache

  deploy:
    executor: 'j21'
    steps:
      - timeout
      - checkout
      - load_cache
      - config_gpg
      - deploy
      - store_cache

workflows:
  test-jdk:
    jobs:
      - test:
          name: test-<<matrix.jdk>>
          matrix:
            parameters:
              jdk:
                - 'j8'
                - 'j11'
                - 'j17'
                - 'j21'
                - 'j23'
  test-jackson:
    jobs:
      - test:
          name: test-<<matrix.args>>
          matrix:
            parameters:
              args:
                - '-Djackson.version=2.20.0'
                - '-Djackson.version=2.19.2'
                - '-Djackson.version=2.18.4'
                - '-Djackson.version=2.17.3'
                - '-Djackson.version=2.16.2'
                - '-Djackson.version=2.15.4'
                - '-Djackson.version=2.14.3'
                - '-Djackson.version=2.13.5'
                - '-Djackson.version=2.12.7'
  deploy:
    jobs:
      - deploy:
          context: java-release
          filters:
            tags:
              only: /^deploy.*/
            branches:
              ignore: /.*/
